{"version":3,"file":"trix.esm.min.js","sources":["../src/trix/config/attachments.js","../src/trix/config/block_attributes.js","../src/trix/config/browser.js","../src/trix/config/lang.js","../src/trix/config/file_size_formatting.js","../src/trix/constants.js","../src/trix/core/helpers/extend.js","../src/trix/core/helpers/dom.js","../src/trix/config/input.js","../src/trix/config/key_names.js","../src/trix/config/parser.js","../src/trix/config/text_attributes.js","../src/trix/config/toolbar.js","../src/trix/config/undo.js","../src/trix/config/css.js","../src/trix/core/basic_object.js","../src/trix/core/utilities/utf16_string.js","../src/trix/core/object.js","../src/trix/core/helpers/arrays.js","../src/trix/core/helpers/bidi.js","../src/trix/core/helpers/config.js","../src/trix/core/helpers/custom_elements.js","../src/trix/core/helpers/events.js","../src/trix/core/helpers/functions.js","../src/trix/core/helpers/objects.js","../src/trix/core/helpers/ranges.js","../src/trix/observers/selection_change_observer.js","../src/trix/core/helpers/strings.js","../src/trix/core/collections/hash.js","../src/trix/core/collections/object_group.js","../src/trix/core/collections/object_map.js","../src/trix/core/collections/element_store.js","../src/trix/core/utilities/operation.js","../src/trix/views/object_view.js","../src/trix/models/html_sanitizer.js","../src/trix/views/attachment_view.js","../src/trix/views/previewable_attachment_view.js","../src/trix/views/piece_view.js","../src/trix/views/text_view.js","../src/trix/views/block_view.js","../src/trix/views/document_view.js","../src/trix/models/piece.js","../src/trix/operations/image_preload_operation.js","../src/trix/models/attachment.js","../src/trix/models/attachment_piece.js","../src/trix/models/string_piece.js","../src/trix/models/splittable_list.js","../src/trix/models/text.js","../src/trix/models/block.js","../src/trix/models/document.js","../src/trix/models/html_parser.js","../src/trix/core/serialization.js","../src/trix/models/managed_attachment.js","../src/trix/models/attachment_manager.js","../src/trix/models/line_break_insertion.js","../src/trix/models/composition.js","../src/trix/models/undo_manager.js","../src/trix/filters/filter.js","../src/trix/filters/attachment_gallery_filter.js","../src/trix/models/editor.js","../src/trix/models/location_mapper.js","../src/trix/models/point_mapper.js","../src/trix/models/selection_manager.js","../src/trix/controllers/attachment_editor_controller.js","../src/trix/controllers/composition_controller.js","../src/trix/controllers/controller.js","../src/trix/observers/mutation_observer.js","../src/trix/operations/file_verification_operation.js","../src/trix/models/flaky_android_keyboard_detector.js","../src/trix/controllers/input_controller.js","../src/trix/controllers/level_0_input_controller.js","../src/trix/controllers/level_2_input_controller.js","../src/trix/controllers/toolbar_controller.js","../src/trix/controllers/editor_controller.js","../src/trix/elements/trix_toolbar_element.js","../src/trix/elements/trix_editor_element.js","../src/trix/trix.js"],"sourcesContent":["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n","const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    htmlAttributes: [ \"language\" ],\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n","const androidVersionMatch = navigator.userAgent.match(/android\\s([0-9]+.*Chrome)/i)\nconst androidVersion = androidVersionMatch && parseInt(androidVersionMatch[1])\n\nexport default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n\n  // Android 13, especially on Samsung keyboards, emits extra compositionend and beforeinput events\n  // that can make the input handler lose the current selection or enter an infinite input -> render -> input\n  // loop.\n  recentAndroid: androidVersion && androidVersion > 12,\n  samsungAndroid: androidVersion && navigator.userAgent.match(/Android.*SM-/),\n\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: typeof InputEvent !== \"undefined\" &&\n    [ \"data\", \"getTargetRanges\", \"inputType\" ].every(prop => prop in InputEvent.prototype),\n}\n","export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n","/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n","export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n","export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n","import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n","import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n","export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n","export default {\n  removeBlankTableCells: false,\n  tableCellSeparator: \" | \",\n  tableRowSeparator: \"\\n\",\n}\n","import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n","import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n","const undo = { interval: 5000 }\nexport default undo\n","export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n","export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n","import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const textArea = makeElement(\"textarea\", { dir: \"auto\", name: \"y\", dirName: \"y.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n  form.appendChild(textArea)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(textArea.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      textArea.value = string\n      return new FormData(form).get(textArea.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n","import * as config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n","/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    return element.getAttribute(\"content\")\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n","const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsMsOfficePaste = ({ dataTransfer }) => {\n  return dataTransfer.types.includes(\"Files\") &&\n    dataTransfer.types.includes(\"text/html\") &&\n    dataTransfer.getData(\"text/html\").includes(\"urn:schemas-microsoft-com:office:office\")\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n","export const defer = (fn) => setTimeout(fn, 1)\n","/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n","import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      document.addEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((sm) => sm !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    this.notifySelectionManagersOfSelectionChange()\n  }\n\n  reset() {\n    this.update()\n  }\n}\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n","/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n?/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n","export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n","export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n","import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height language class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe form noscript\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static setHTML(element, html) {\n    const sanitizedElement = new this(html).sanitize()\n    const sanitizedHtml = sanitizedElement.getHTML ? sanitizedElement.getHTML() : sanitizedElement.outerHTML\n    element.innerHTML = sanitizedHtml\n  }\n\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    return this.normalizeListElementNesting()\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n","import * as config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      HTMLSanitizer.setHTML(innerElement, this.attachment.getContent())\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  HTMLSanitizer.setHTML(div, html || \"\")\n  return div.querySelector(tagName)\n}\n","import * as config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n","/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n","/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n","import * as config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    const attributes = {}\n    let className\n    const attributeName = this.attributes[depth]\n\n    const { tagName, htmlAttributes = [] } = getBlockConfig(attributeName)\n\n    if (depth === 0 && this.block.isRTL()) {\n      Object.assign(attributes, { dir: \"rtl\" })\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    Object.entries(this.block.htmlAttributes).forEach(([ name, value ]) => {\n      if (htmlAttributes.includes(name)) {\n        attributes[name] = value\n      }\n    })\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n","import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n","import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n","import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|webp|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n","import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice([ attribute ]))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n","import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n","/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  objectsAreEqual,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes, blockJSON.htmlAttributes)\n  }\n\n  constructor(text, attributes, htmlAttributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n    this.htmlAttributes = htmlAttributes || {}\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes) && objectsAreEqual(this.htmlAttributes, block?.htmlAttributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes, this.htmlAttributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes, this.htmlAttributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  addHTMLAttribute(attribute, value) {\n    const htmlAttributes = Object.assign({}, this.htmlAttributes, { [attribute]: value })\n    return new Block(this.text, this.attributes, htmlAttributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n      htmlAttributes: this.htmlAttributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n","import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  setHTMLAttributeAtPosition(position, name, value) {\n    const block = this.getBlockAtPosition(position)\n    const updatedBlock = block.addHTMLAttribute(name, value)\n    return this.replaceBlock(block, updatedBlock)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray().map((block) => JSON.parse(block.text.toConsole())))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n","/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}, htmlAttributes = {}) => {\n  const text = []\n  return { text, attributes, htmlAttributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      HTMLSanitizer.setHTML(this.containerElement, this.html)\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      const htmlAttributes = this.getBlockHTMLAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        const htmlAttributes = this.getBlockHTMLAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableRowSeparator)\n          }\n          break\n        case \"td\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableCellSeparator)\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element, htmlAttributes = {}) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes, htmlAttributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  getBlockHTMLAttributes(element) {\n    const attributes = {}\n    const blockConfig = Object.values(config.blockAttributes).find(settings => settings.tagName === tagName(element))\n    const allowedAttributes = blockConfig?.htmlAttributes || []\n\n    allowedAttributes.forEach((attribute) => {\n      if (element.hasAttribute(attribute)) {\n        attributes[attribute] = element.getAttribute(attribute)\n      }\n    })\n\n    return attributes\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  needsTableSeparator(element) {\n    if (config.parser.removeBlankTableCells) {\n      const content = element.previousSibling?.textContent\n      return content && /\\S/.test(content)\n    } else {\n      return element.previousSibling\n    }\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n","/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n","import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n","import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n","export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n","import * as config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setHTMLAtributeAtPosition(position, attributeName, value) {\n    const block = this.document.getBlockAtPosition(position)\n    const allowedHTMLAttributes = getBlockConfig(block.getLastAttribute())?.htmlAttributes\n\n    if (block && allowedHTMLAttributes?.includes(attributeName)) {\n      const newDocument = this.document.setHTMLAttributeAtPosition(position, attributeName, value)\n      this.setDocument(newDocument)\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n","const BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nexport default class Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n","import Filter from \"./filter\"\n\nexport const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\n","import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // HTML attributes\n  setHTMLAtributeAtPosition(position, name, value) {\n    this.composition.setHTMLAtributeAtPosition(position, name, value)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n","/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n","/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n","/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n","import { removeNode } from \"trix/core/helpers\"\n\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName, triggerEvent } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption != null) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    triggerEvent(\"trix-attachment-before-toolbar\", { onElement: this.element, attributes: { toolbar: element, attachment: this.attachment } })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n","import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n","/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n","import * as config from \"trix/config\"\nimport { NON_BREAKING_SPACE, OBJECT_REPLACEMENT_CHARACTER, ZERO_WIDTH_SPACE } from \"trix/constants\"\n\n// Each software keyboard on Android emits its own set of events and some of them can be buggy.\n// This class detects when some buggy events are being emitted and lets know the input controller\n// that they should be ignored.\nexport default class FlakyAndroidKeyboardDetector {\n  constructor(element) {\n    this.element = element\n  }\n\n  shouldIgnore(event) {\n    if (!config.browser.samsungAndroid) return false\n\n    this.previousEvent = this.event\n    this.event = event\n\n    this.checkSamsungKeyboardBuggyModeStart()\n    this.checkSamsungKeyboardBuggyModeEnd()\n\n    return this.buggyMode\n  }\n\n  // private\n\n  // The Samsung keyboard on Android can enter a buggy state in which it emits a flurry of confused events that,\n  // if processed, corrupts the editor. The buggy mode always starts with an insertText event, right after a\n  // keydown event with for an \"Unidentified\" key, with the same text as the editor element, except for a few\n  // extra whitespace, or exotic utf8, characters.\n  checkSamsungKeyboardBuggyModeStart() {\n    if (this.insertingLongTextAfterUnidentifiedChar() && differsInWhitespace(this.element.innerText, this.event.data)) {\n      this.buggyMode = true\n      this.event.preventDefault()\n    }\n  }\n\n  // The flurry of buggy events are always insertText. If we see any other type, it means it's over.\n  checkSamsungKeyboardBuggyModeEnd() {\n    if (this.buggyMode && this.event.inputType !== \"insertText\") {\n      this.buggyMode = false\n    }\n  }\n\n  insertingLongTextAfterUnidentifiedChar() {\n    return this.isBeforeInputInsertText() && this.previousEventWasUnidentifiedKeydown() && this.event.data?.length > 50\n  }\n\n  isBeforeInputInsertText() {\n    return this.event.type === \"beforeinput\" && this.event.inputType === \"insertText\"\n  }\n\n  previousEventWasUnidentifiedKeydown() {\n    return this.previousEvent?.type === \"keydown\" && this.previousEvent?.key === \"Unidentified\"\n  }\n}\n\nconst differsInWhitespace = (text1, text2) => {\n  return normalize(text1) === normalize(text2)\n}\n\nconst whiteSpaceNormalizerRegexp = new RegExp(`(${OBJECT_REPLACEMENT_CHARACTER}|${ZERO_WIDTH_SPACE}|${NON_BREAKING_SPACE}|\\\\s)+`, \"g\")\nconst normalize = (text) => text.replace(whiteSpaceNormalizerRegexp, \" \").trim()\n","import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\nimport FlakyAndroidKeyboardDetector from \"../models/flaky_android_keyboard_detector\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    this.flakyKeyboardDetector = new FlakyAndroidKeyboardDetector(this.element)\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            if (this.flakyKeyboardDetector.shouldIgnore(event)) return\n\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n","import * as config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n","import { getAllAttributeNames, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\nimport * as config from \"trix/config\"\n\nimport { dataTransferIsMsOfficePaste, dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n\n      if (handler) {\n        this.withEvent(event, handler)\n        this.scheduleRender()\n      }\n    },\n\n    input(event) {\n      selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        if (!config.browser.recentAndroid) this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (processableFilePaste(this.event)) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      const replacement = this.event.dataTransfer.getData(\"text/plain\")\n      const domRange = this.event.getTargetRanges()[0]\n\n      this.withTargetDOMRange(domRange, () => {\n        this.insertString(replacement, { updatePosition: false })\n      })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: this.composing ? 1 : 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst processableFilePaste = (event) => {\n  // Paste events that only have files are handled by the paste event handler,\n  // to work around Safari not supporting beforeinput.insertFromPaste for files.\n\n  // MS Office text pastes include a file with a screenshot of the text, but we should\n  // handle them as text pastes.\n  return event.dataTransfer.files?.[0] && !pasteEventHasFilesOnly(event) && !dataTransferIsMsOfficePaste(event)\n}\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    const fileTypes = Array.from(clipboard.types).filter((type) => type.match(/file/i)) // \"Files\", \"application/x-moz-file\"\n    return fileTypes.length === clipboard.types.length && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName, element)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-trix-validate\", \"\")\n      input.classList.add(\"trix-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport * as config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName, invokingElement) {\n    return this.invokeAction(actionName, invokingElement)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName, invokingElement) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName, invokingElement })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setInputElementValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n","import * as config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n","import * as config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nexport default class TrixEditorElement extends HTMLElement {\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    const labels = []\n    if (this.id && this.ownerDocument) {\n      labels.push(...Array.from(this.ownerDocument.querySelectorAll(`label[for='${this.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setInputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n      ensureAriaLabel(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.registerResetListener()\n      this.registerClickListener()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.unregisterResetListener()\n    return this.unregisterClickListener()\n  }\n\n  // Form support\n\n  registerResetListener() {\n    this.resetListener = this.resetBubbled.bind(this)\n    return window.addEventListener(\"reset\", this.resetListener, false)\n  }\n\n  unregisterResetListener() {\n    return window.removeEventListener(\"reset\", this.resetListener, false)\n  }\n\n  registerClickListener() {\n    this.clickListener = this.clickBubbled.bind(this)\n    return window.addEventListener(\"click\", this.clickListener, false)\n  }\n\n  unregisterClickListener() {\n    return window.removeEventListener(\"click\", this.clickListener, false)\n  }\n\n  resetBubbled(event) {\n    if (event.defaultPrevented) return\n    if (event.target !== this.form) return\n    return this.reset()\n  }\n\n  clickBubbled(event) {\n    if (event.defaultPrevented) return\n    if (this.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    return this.focus()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n","import { version } from \"../../package.json\"\n\nimport * as config from \"trix/config\"\nimport * as core from \"trix/core\"\nimport * as models from \"trix/models\"\nimport * as views from \"trix/views\"\nimport * as controllers from \"trix/controllers\"\nimport * as observers from \"trix/observers\"\nimport * as operations from \"trix/operations\"\nimport * as elements from \"trix/elements\"\nimport * as filters from \"trix/filters\"\n\nconst Trix = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  operations,\n  elements,\n  filters\n}\n\n// Expose models under the Trix constant for compatibility with v1\nObject.assign(Trix, models)\n\nfunction start() {\n  if (!customElements.get(\"trix-toolbar\")) {\n    customElements.define(\"trix-toolbar\", elements.TrixToolbarElement)\n  }\n\n  if (!customElements.get(\"trix-editor\")) {\n    customElements.define(\"trix-editor\", elements.TrixEditorElement)\n  }\n}\n\nwindow.Trix = Trix\nsetTimeout(start, 0)\n\nexport default Trix\n"],"names":["attachmentSelector","attachments","preview","presentation","caption","name","size","file","attributes","default","tagName","parse","quote","nestable","heading1","terminal","breakOnReturn","group","code","htmlAttributes","text","plaintext","bulletList","bullet","listAttribute","test","element","parentNode","this","numberList","number","attachmentGallery","exclusive","toLowerCase","androidVersionMatch","navigator","userAgent","match","androidVersion","parseInt","browser$1","composesExistingText","recentAndroid","samsungAndroid","forcesObjectResizing","supportsInputEvents","InputEvent","every","prop","prototype","lang$1","attachFiles","bold","bullets","byte","bytes","captionPlaceholder","indent","italic","link","numbers","outdent","redo","remove","strike","undo","unlink","url","urlPlaceholder","GB","KB","MB","PB","TB","sizes","lang","file_size_formatting","prefix","precision","formatter","base","exp","Math","floor","log","pow","toFixed","replace","ZERO_WIDTH_SPACE","NON_BREAKING_SPACE","extend","properties","key","value","html","document","documentElement","matches","handleEvent","eventName","onElement","matchingSelector","withCallback","inPhase","preventDefault","times","selector","useCapture","handler","event","destroy","target","findClosestElementFromNode","call","removeEventListener","addEventListener","triggerEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","elementMatchesSelector","nodeType","node","untilNode","Node","ELEMENT_NODE","closest","innerElementIsActive","activeElement","elementContainsNode","findChildIndexOfNode","childIndex","previousSibling","removeNode","removeChild","walkTree","tree","onlyNodesOfType","usingFilter","expandEntityReferences","whatToShow","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","SHOW_COMMENT","SHOW_ALL","createTreeWalker","makeElement","tag","options","createElement","editable","contenteditable","setAttribute","style","data","dataset","className","split","forEach","classList","add","textContent","childNodes","concat","childNode","appendChild","blockTagNames","getBlockTagNames","blockAttributes","push","nodeIsBlockContainer","nodeIsBlockStartComment","firstChild","nodeIsBlockStart","strict","includes","nodeProbablyIsBlockContainer","nodeIsCommentNode","COMMENT_NODE","nodeIsCursorTarget","nodeIsTextNode","trixCursorTarget","nodeIsAttachmentElement","nodeIsEmptyTextNode","TEXT_NODE","input","level2Enabled","getLevel","browser","pickFiles","callback","type","multiple","hidden","id","fileInputId","files","getElementById","body","click","parser","removeBlankTableCells","tableCellSeparator","tableRowSeparator","text_attributes","inheritable","window","getComputedStyle","fontWeight","fontStyle","href","groupTagName","getAttribute","frozen","backgroundColor","toolbar","getDefaultHTML","interval","attachment","attachmentCaption","attachmentCaptionEditor","attachmentMetadata","attachmentMetadataContainer","attachmentName","attachmentProgress","attachmentSize","attachmentToolbar","BasicObject","proxyMethod","expression","toMethod","toProperty","optional","parseProxyMethodExpression","subject","object","apply","arguments","proxyMethodExpressionPattern","Error","args","Function","RegExp","UTF16String","box","fromUCS2String","toString","ucs2String","ucs2decode","fromCodepoints","codepoints","ucs2encode","constructor","super","length","ucs2Length","offsetToUCS2Offset","offset","slice","max","offsetFromUCS2Offset","ucs2Offset","charAt","isEqualTo","toJSON","getCacheKey","hasArrayFrom","Array","from","hasStringCodePointAt","codePointAt","hasStringFromCodePoint","String","fromCodePoint","string","map","char","output","counter","charCodeAt","extra","array","result","fromCharCode","join","TrixObject","fromJSONString","jsonString","fromJSON","JSON","hasSameConstructorAs","inspect","parts","contents","contentsForInspection","toJSONString","stringify","toUTF16String","arraysAreEqual","a","b","index","spliceArray","splice","RTL_PATTERN","getDirection","dir","dirName","textArea","form","supportsDirName","FormData","has","error","supportsDirSelector","get","trim","allAttributeNames","blockAttributeNames","textAttributeNames","listAttributeNames","getAllAttributeNames","getTextAttributeNames","getBlockAttributeNames","getBlockConfig","attributeName","config.blockAttributes","Object","keys","getTextConfig","config.textAttributes","installDefaultCSSForTagName","defaultCSS","insertStyleElementForTagName","nonce","getCSPNonce","head","insertBefore","getMetaElement","querySelector","testTransferData","dataTransferIsPlainText","dataTransfer","getData","DOMParser","parseFromString","keyEventIsKeyboardCommand","platform","metaKey","ctrlKey","defer","fn","setTimeout","copyObject","objectsAreEqual","normalizeRange","range","isArray","copyValue","rangeIsCollapsed","start","end","rangeValuesAreEqual","rangesAreEqual","leftRange","rightRange","leftStart","leftEnd","rightStart","rightEnd","left","right","SelectionChangeObserver","update","bind","selectionManagers","started","stop","registerSelectionManager","selectionManager","unregisterSelectionManager","filter","sm","notifySelectionManagersOfSelectionChange","selectionDidChange","reset","selectionChangeObserver","getDOMSelection","selection","getSelection","rangeCount","getDOMRange","domRange","getRangeAt","domRangeIsPrivate","setDOMRange","removeAllRanges","addRange","nodeIsPrivate","startContainer","endContainer","getPrototypeOf","normalizeSpaces","breakableWhitespacePattern","squishBreakableWhitespace","source","utf16StringDifferences","diffA","utf16StringDifference","utf16String","diffB","leftIndex","rightIndexA","rightIndexB","Hash","fromCommonAttributesOfObjects","objects","hash","getKeys","getKeysCommonToHash","values","copy","merge","unbox","toArray","isEmpty","toObject","keyToRemove","sort","ObjectGroup","groupObjects","ungroupedObjects","depth","asTree","canBeGrouped","canBeGroupedWith","getObjects","getDepth","ObjectMap","find","ElementStore","elements","getKey","trixStoreKey","Operation","isPerforming","performing","hasPerformed","performed","hasSucceeded","succeeded","hasFailed","getPromise","promise","Promise","resolve","reject","perform","release","cancel","ObjectView","childViews","rootView","getNodes","nodes","createNodes","cloneNode","invalidate","parentView","invalidateViewForObject","findViewForObject","findOrCreateCachedChildView","viewClass","view","getCachedViewForObject","recordChildView","createChildView","cacheViewForObject","ObjectGroupView","getAllChildViews","views","childView","findElement","findElementForObject","getViewCache","isViewCachingEnabled","viewCache","shouldCacheViews","enableViewCaching","disableViewCaching","cache","garbageCollectCachedViews","objectKeys","objectGroup","getChildViews","createContainerElement","DEFAULT_ALLOWED_ATTRIBUTES","DEFAULT_FORBIDDEN_PROTOCOLS","DEFAULT_FORBIDDEN_ELEMENTS","HTMLSanitizer","setHTML","sanitizedElement","sanitize","sanitizedHtml","getHTML","outerHTML","innerHTML","sanitizer","allowedAttributes","forbiddenProtocols","forbiddenElements","createBodyElementForHTML","sanitizeElements","normalizeListElementNesting","getBody","walker","nodesToRemove","nextNode","currentNode","elementIsRemovable","sanitizeElement","hasAttribute","protocol","removeAttribute","indexOf","querySelectorAll","listElement","previousElement","previousElementSibling","elementIsForbidden","elementIsntSerializable","doc","implementation","createHTMLDocument","css","config","AttachmentView","uploadProgressDelegate","attachmentPiece","piece","createContentNodes","innerElement","figure","getClassName","getHref","tabindex","hasContent","getContent","createCaptionElement","isPending","progressElement","class","getUploadProgress","trixMutable","createCursorTarget","figcaption","getCaption","captionConfig","getCaptionConfig","getFilename","getFormattedFilesize","nameElement","createTextNode","sizeElement","names","getType","extension","getExtension","trixAttachment","trixContentType","getContentType","trixId","trixAttributes","trixSerialize","htmlContainsTagName","config.attachments","findProgressElement","attachmentDidChangeUploadProgress","div","PreviewableAttachmentView","previewDelegate","image","src","refresh","config.lang","updateAttributesForImage","getURL","previewURL","getPreviewURL","serializedAttributes","width","getWidth","height","getHeight","storeKey","attachmentDidChangeAttributes","PieceView","getAttributes","textConfig","context","createAttachmentNodes","createStringNodes","firstElementChild","findInnerElement","isPreviewable","iterable","substring","preserveSpaces","styles","pendingElement","styleProperty","isLast","isFirst","followsWhitespace","TextView","pieces","getPieces","lastIndex","endsWithWhitespace","previousPiece","BlockView","block","createComment","getLastAttribute","textView","shouldAddExtraNewlineElement","isRTL","assign","getBlockBreakPosition","entries","DocumentView","render","sync","elementStore","setDocument","shadowElement","getBlocks","isSynced","elementsHaveEqualHTML","fragment","createDocumentFragmentForSync","lastChild","didSync","findStoredElements","createDocumentFragment","storedElement","replaceChild","otherElement","ignoreSpaces","Piece","static","registerType","types","pieceJSON","copyWithAttributes","getValue","copyWithAdditionalAttributes","copyWithoutAttribute","attribute","getAttributesHash","hasSameStringValueAsPiece","hasSameAttributesAsPiece","isBlockBreak","isSerializable","getLength","canBeConsolidatedWith","ImagePreloadOperation","Image","onload","naturalWidth","naturalHeight","onerror","Attachment","attachmentForFile","attributesForFile","setFile","filename","filesize","contentType","attachmentJSON","releaseFile","didChangeAttributes","setAttributes","newAttributes","delegate","preloadURL","previewablePattern","getFilesize","config.fileSize","getFile","preloadFile","releasePreloadedFile","uploadProgress","setUploadProgress","preloadingURL","setPreviewURL","attachmentDidChangePreviewURL","preload","fileObjectURL","URL","createObjectURL","revokeObjectURL","then","catch","AttachmentPiece","ensureAttachmentExclusivelyHasAttribute","removeProhibitedAttributes","permittedAttributes","json","toConsole","StringPiece","normalizeNewlines","consolidateWith","splitAtOffset","SplittableList","eachObject","insertObjectAtIndex","insertSplittableListAtIndex","splittableList","insertSplittableListAtPosition","position","splitObjectAtPosition","editObjectAtIndex","replaceObjectAtIndex","removeObjectAtIndex","getObjectAtIndex","getSplittableListInRange","rightIndex","splitObjectsAtRange","selectSplittableList","removeObjectsInRange","transformObjectsInRange","transform","transformedObjects","rightOuterIndex","leftInnerIndex","startOfRange","endOfRange","getObjectAtPosition","findIndexAndOffsetAtPosition","splitIndex","splitOffset","leftObject","rightObject","consolidate","pendingObject","consolidateFromIndexToIndex","startIndex","endIndex","objectsInRange","consolidatedInRange","currentPosition","nextPosition","findPositionAtIndexAndOffset","currentIndex","getEndPosition","endPosition","objectArraysAreEqual","Text","textForAttachmentWithAttributes","textForStringWithAttributes","textJSON","notEmpty","pieceList","copyWithPieceList","copyUsingObjectMap","objectMap","appendText","insertTextAtPosition","removeTextAtRange","replaceTextAtRange","moveTextFromRangeToPosition","getTextAtRange","addAttributeAtRange","addAttributesAtRange","removeAttributeAtRange","setAttributesAtRange","getAttributesAtPosition","getCommonAttributes","getCommonAttributesAtRange","getExpandedRangeForAttributeAtOffset","getStringAtRange","getStringAtPosition","startsWithString","endsWithString","getAttachmentPieces","getAttachments","getAttachmentAndPositionById","attachmentId","getAttachmentById","getRangeOfAttachment","attachmentAndPosition","updateAttributesForAttachment","eachPiece","getPieceAtPosition","toSerializableText","Block","blockJSON","applyBlockBreakToText","copyWithText","copyWithoutText","copyWithoutAttributes","mappedText","addAttribute","expandAttribute","addHTMLAttribute","removeLastValue","removeLastAttribute","getLastElement","getAttributeLevel","getAttributeAtLevel","level","hasAttributes","getLastNestableAttribute","getNestableAttributes","getNestingLevel","decreaseNestingLevel","increaseNestingLevel","lastIndexOf","getListItemAttributes","isListItem","isTerminalBlock","breaksOnReturn","findLineBreakInDirectionFromPosition","direction","newlineText","getTextWithoutBlockBreak","textEndsInBlockBreak","otherBlock","otherAttributes","otherAttribute","getListAttributeNames","unmarkExistingInnerBlockBreaksInText","addBlockBreakToText","modified","innerPieces","lastPiece","unmarkBlockBreakPiece","blockBreakText","blockBreak","Document","documentJSON","fromString","textAttributes","blocks","blockList","getBlockAtIndex","consolidateBlocks","copyUsingObjectsFromDocument","sourceDocument","copyWithBaseBlockAttributes","replaceBlock","oldBlock","newBlock","insertDocumentAtRange","locationFromPosition","getBlockAtPosition","mergeDocumentAtRange","formattedDocument","startPosition","startLocation","baseBlockAttributes","getBaseBlockAttributes","trailingBlockAttributes","leadingBlockAttributes","blockCount","getBlockCount","firstBlock","firstText","insertTextAtRange","leftPosition","rightPosition","leftLocation","rightLocation","locationRangeFromRange","leftOffset","leftBlock","rightOffset","rightBlock","leftText","rightText","affectedBlockCount","getDocumentAtRange","movingRightward","eachBlockAtRange","textRange","eachBlock","getTextAtIndex","removeAttributeForAttachment","setHTMLAttributeAtPosition","updatedBlock","insertBlockBreakAtRange","applyBlockAttributeAtRange","expanded","expandRangeToLineBreaksAndSplitBlocks","blockConfig","removeLastListAttributeAtRange","exceptAttributeName","converted","convertLineBreaksToBlockBreaksInRange","removeBlockAttributesAtRange","removeLastTerminalAttributeAtRange","consolidateBlocksAtRange","lastAttributeName","endLocation","startBlock","positionFromLocation","endBlock","getTextAtPosition","getCharacterAtPosition","getEditCount","editCount","getCommonAttributesAtPosition","attributesForBlock","commonAttributes","attributesLeft","inheritableAttributes","getRangeOfCommonAttributeAtPosition","startOffset","endOffset","blockIndex","lastAttributeIndex","min","attachmentPieces","getLocationRangeOfAttachment","getAttachmentPieceForAttachment","findRangesForBlockAttribute","ranges","findRangesForTextAttribute","withValue","location","locationRangeFromPosition","rangeFromLocationRange","locationRange","getTexts","toSerializableDocument","pieceForString","parseTrixDataAttribute","HTMLParser","referenceElement","blockElements","processedElements","getDocument","createHiddenContainer","containerElement","nodeFilter","processNode","translateBlockElementMarginsToNewlines","removeHiddenContainer","display","nextSibling","isInsignificantTextNode","appendBlockForTextNode","processTextNode","appendBlockForElement","processElement","currentBlockElement","isBlockElement","appendStringWithAttributes","getBlockAttributes","getBlockHTMLAttributes","currentBlock","appendBlockForAttributesWithElement","elementIsBlockElement","currentBlockContainsElement","parentBlockElement","findParentBlockElement","appendEmptyBlock","parentElement","elementCanDisplayPreformattedText","stringEndsWithWhitespace","leftTrimBreakableWhitespace","getTextAttributes","appendAttachmentWithAttributes","isExtraBR","dimensions","getImageDimensions","needsTableSeparator","config.parser","blockForAttributes","appendPiece","pieceForAttachment","appendStringToTextAtIndex","prependStringToTextAtIndex","unshift","configAttr","attributeInheritedFromBlock","blockElement","findBlockElementAncestors","attrConfig","reverse","settings","ancestors","stringIsAllBreakableWhitespace","nodeEndsWithNonWhitespace","content","defaultMargin","getMarginOfDefaultBlockElement","margin","getMarginOfBlockElementAtIndex","top","bottom","getBlockElementMargin","whiteSpace","marginTop","marginBottom","FILTER_REJECT","FILTER_ACCEPT","unserializableAttributeNames","serializedAttributesAttribute","serializedAttributesSelector","blockCommentPattern","serializers","serializable","HTMLElement","el","ManagedAttachment","attachmentManager","requestRemovalOfAttachment","AttachmentManager","managedAttachments","manageAttachment","attachmentIsManaged","attachmentManagerDidRequestRemovalOfAttachment","unmanageAttachment","managedAttachment","LineBreakInsertion","composition","selectedRange","getSelectedRange","previousCharacter","nextCharacter","shouldInsertBlockBreak","shouldBreakFormattedBlock","shouldDecreaseListLevel","shouldPrependListItem","shouldRemoveLastBlockAttribute","Composition","currentAttributes","revision","refreshAttachments","compositionDidChangeDocument","getSnapshot","loadSnapshot","compositionWillLoadSnapshot","setSelection","compositionDidLoadSnapshot","insertText","updatePosition","notifyDelegateOfInsertionAtRange","insertBlock","insertDocument","insertString","getCurrentTextAttributes","insertBlockBreak","insertLineBreak","insertion","decreaseListLevel","removeLastBlockAttribute","breakFormattedBlock","insertHTML","replaceHTML","getLocationRange","insertFile","insertFiles","compositionShouldAcceptFile","insertAttachments","insertAttachment","attachmentText","shouldManageDeletingInDirection","shouldManageMovingCursorInDirection","deleteInDirection","deletingIntoPreviousBlock","selectionSpansBlocks","selectionIsCollapsed","canDecreaseBlockAttributeLevel","getBlock","decreaseBlockAttributeLevel","getExpandedRangeInDirection","getAttachmentAtRange","editAttachment","moveTextFromRange","removeAttachment","stopEditingAttachment","removeCurrentAttribute","insertPlaceholder","placeholderPosition","getPosition","selectPlaceholder","setSelectedRange","PLACEHOLDER","forgetPlaceholder","hasCurrentAttribute","toggleCurrentAttribute","setCurrentAttribute","canSetCurrentAttribute","canSetCurrentBlockAttribute","canSetCurrentTextAttribute","getSelectedDocument","setBlockAttribute","setTextAttribute","notifyDelegateOfCurrentAttributesChange","setHTMLAtributeAtPosition","allowedHTMLAttributes","newDocument","removeBlockAttribute","updateCurrentAttributes","removeTextAttribute","canDecreaseNestingLevel","canIncreaseNestingLevel","previousBlock","getPreviousBlock","arrayStartsWith","attributeLevel","ignoreLock","getCurrentAttributes","freezeSelection","thawSelection","hasFrozenSelection","compositionDidRequestChangingSelectionToLocationRange","getSelectionManager","setLocationRange","targetLocationRange","withTargetLocationRange","withTargetRange","withTargetDOMRange","createLocationRangeFromDOMRange","translateUTF16PositionFromOffset","editingAttachment","moveCursorInDirection","canEditAttachment","expandSelectionInDirection","expandSelectionForEditing","expandSelectionAroundCommonAttribute","selectionContainsAttachments","getSelectedAttachments","selectionIsInCursorTarget","positionIsCursorTarget","locationIsCursorTarget","positionIsBlockBreak","added","removed","oldArray","newArray","existingValues","Set","currentValues","summarizeArrayChange","compositionDidRemoveAttachment","compositionDidAddAttachment","compositionDidEditAttachment","compositionDidChangeAttachmentPreviewURL","compositionDidStartEditingAttachment","compositionDidStopEditingAttachment","compositionDidChangeCurrentAttributes","compositionDidPerformInsertionAtRange","utf16string","utf16position","UndoManager","undoEntries","redoEntries","recordUndoEntry","description","consolidatable","previousEntry","entryHasDescriptionAndContext","undoEntry","createEntry","pop","redoEntry","snapshot","canUndo","canRedo","entry","BLOCK_ATTRIBUTE_NAME","Filter","applyBlockAttribute","findRangesOfBlocks","findRangesOfPieces","moveSelectedRangeForward","attachmentGalleryFilter","DEFAULT_FILTERS","Editor","undoManager","filters","loadDocument","loadHTML","loadJSON","getClientRectAtPosition","getClientRectAtLocationRange","activateAttribute","attributeIsActive","canActivateAttribute","deactivateAttribute","LocationMapper","findLocationFromContainerAndOffset","container","foundBlock","attachmentElement","findAttachmentElementParentForNode","rejectAttachmentContents","nodeLength","findContainerAndOffsetFromLocation","nodeOffset","findNodeAndOffsetFromLocation","getSignificantNodesForIndex","acceptSignificantNodes","recordingNodes","rejectEmptyTextNodes","PointMapper","createDOMRangeFromPoint","x","y","caretPositionFromPoint","offsetNode","createRange","setStart","caretRangeFromPoint","createTextRange","originalDOMRange","moveToPoint","select","getClientRectsForDOMRange","getClientRects","SelectionManager","didMouseDown","locationMapper","pointMapper","lockCount","currentLocationRange","lockedLocationRange","createDOMRangeFromLocationRange","updateCurrentLocationRange","setLocationRangeFromPointRange","pointRange","getLocationAtPoint","lock","unlock","clearSelection","collapsed","selectionIsExpanded","domRangeWithinElement","undefined","pauseTemporarily","resumeHandlers","paused","resume","clearTimeout","resumeTimeout","locationRangeDidChange","rangeStart","rangeEnd","setEnd","point","keyNames","undoable","commands","do","undos","AttachmentEditorController","didClickToolbar","didClickActionButton","didKeyDownCaption","didInputCaption","didChangeCaption","didBlurCaption","install","makeElementMutable","addToolbar","installCaptionEditor","uninstall","savePendingCaption","didUninstallAttachmentEditor","pendingCaption","attachmentEditorDidRequestUpdatingAttributesForAttachment","attachmentEditorDidRequestRemovingAttributeForAttachment","title","trixAction","textarea","placeholder","textareaClone","tabIndex","autoresize","scrollHeight","editingFigcaption","editCaption","focus","stopPropagation","attachmentEditorDidRequestRemovalOfAttachment","keyCode","attachmentEditorDidRequestDeselectingAttachment","CompositionController","didFocus","didBlur","didClickAttachment","documentView","focused","compositionControllerDidFocus","blurPromise","compositionControllerDidBlur","findAttachmentForElement","compositionControllerDidSelectAttachment","getSerializableElement","isEditingAttachment","canSyncDocumentView","compositionControllerWillSyncDocumentView","compositionControllerDidSyncDocumentView","compositionControllerDidRender","rerenderViewForObject","refreshViewCache","attachmentEditor","installAttachmentEditorForAttachment","uninstallAttachmentEditor","compositionControllerWillUpdateAttachment","compositionControllerDidRequestRemovalOfAttachment","compositionControllerDidRequestDeselectingAttachment","Controller","mutableAttributeName","mutableSelector","childList","characterData","characterDataOldValue","subtree","MutationObserver","didMutate","observer","observe","disconnect","mutations","findSignificantMutations","elementDidMutate","getMutationSummary","mutation","mutationIsSignificant","nodeIsMutable","nodesModifiedByMutation","nodeIsSignificant","addedNodes","removedNodes","getTextMutationSummary","additions","deletions","getTextChangesFromCharacterData","textChanges","getTextChangesFromChildList","addition","summary","textAdded","deleted","textDeleted","getMutationsByType","textRemoved","getTextForNodes","characterMutations","startMutation","endMutation","summarized","oldString","newString","summarizeStringChange","oldValue","FileVerificationOperation","reader","FileReader","abort","readAsArrayBuffer","FlakyAndroidKeyboardDetector","shouldIgnore","config.browser","previousEvent","checkSamsungKeyboardBuggyModeStart","checkSamsungKeyboardBuggyModeEnd","buggyMode","insertingLongTextAfterUnidentifiedChar","differsInWhitespace","innerText","inputType","isBeforeInputInsertText","previousEventWasUnidentifiedKeydown","text1","text2","normalize","whiteSpaceNormalizerRegexp","InputController","mutationObserver","flakyKeyboardDetector","events","handlerFor","mutationSummary","editorWillSyncDocumentView","editorDidSyncDocumentView","requestRender","inputControllerDidRequestRender","requestReparse","inputControllerDidRequestReparse","operations","all","handleInput","inputControllerWillAttachFiles","responder","defaultPrevented","inputControllerWillHandleInput","inputControllerDidHandleInput","createLinkHTML","pastedFileCount","Level0InputController","keydown","isComposing","resetInputSummary","inputSummary","didInput","keyName","modifier","setInputSummary","character","inputControllerDidReceiveKeyboardCommand","keypress","altKey","stringFromKeyEvent","inputControllerWillPerformTyping","didDelete","textInput","toUpperCase","dragenter","dragstart","serializeSelectionToDataTransfer","draggedRange","inputControllerDidStartDrag","dragover","canAcceptDataTransfer","draggingPoint","clientX","clientY","inputControllerDidReceiveDragOverPoint","dragend","inputControllerDidCancelDrag","drop","inputControllerWillMoveText","cut","clipboardData","inputControllerWillCutText","paste","clipboard","testClipboardData","pasteEventIsCrippledSafariHTMLPaste","getPastedHTMLUsingHiddenElement","inputControllerWillPaste","inputControllerDidPaste","items","getAsFile","extensionForFile","compositionstart","getCompositionInput","compositionupdate","compositionend","beforeinput","backspace","preferDocument","tab","control","d","h","o","shift","alt","meta","inputControllerDidAllowUnhandledInput","mutationIsExpected","mutationAdditionMatchesSummary","mutationDeletionMatchesSummary","unexpectedNewlineAddition","unexpectedNewlineDeletion","textChanged","composedEmptyString","compositionInput","getEndData","CompositionInput","isEnded","setData","dataTransferIsWritable","Files","pageXOffset","pageYOffset","opacity","requestAnimationFrame","which","charCode","hasPasteboardFlavor","hasReadableDynamicData","isExternalHTMLPaste","isExternalRichTextPaste","inputController","isSignificant","canApplyToDocument","Level2InputController","command","keyboardCommandFromKeyEvent","shiftKey","withEvent","pasteEventHasFilesOnly","pasteEventHasPlainTextOnly","inputTypes","scheduleRender","dragging","pointFromEvent","dragEventHasFiles","composing","ArrowLeft","ArrowRight","Backspace","Tab","deleteByComposition","deleteByCut","deleteByDrag","deleteByDragRange","deleteCompositionText","deleteContent","deleteContentBackward","deleteContentForward","deleteEntireSoftLine","deleteHardLineBackward","deleteHardLineForward","deleteSoftLineBackward","deleteSoftLineForward","deleteWordBackward","deleteWordForward","formatBackColor","activateAttributeIfSupported","formatBold","toggleAttributeIfSupported","formatFontColor","formatFontName","formatIndent","formatItalic","formatJustifyCenter","formatJustifyFull","formatJustifyLeft","formatJustifyRight","formatOutdent","formatRemove","formatSetBlockTextDirection","formatSetInlineTextDirection","formatStrikeThrough","formatSubscript","formatSuperscript","formatUnderline","historyRedo","inputControllerWillPerformRedo","historyUndo","inputControllerWillPerformUndo","insertCompositionText","insertFromComposition","insertFromDrop","insertFromPaste","afterRender","processableFilePaste","insertFromYank","insertLink","insertOrderedList","insertParagraph","insertReplacementText","replacement","getTargetRanges","insertTranspose","insertUnorderedList","scheduledRender","reparse","cancelAnimationFrame","inputControllerWillPerformFormatting","getTargetDOMRange","minLength","targetRanges","staticRangeToRange","staticRange","dataTransferIsMsOfficePaste","attributeButtonSelector","actionButtonSelector","toolbarButtonSelector","dialogSelector","activeDialogSelector","dialogButtonSelector","dialogInputSelector","getInputForDialog","getAttributeName","getActionName","ToolbarController","didClickAttributeButton","didClickDialogButton","didKeyDownDialogInput","actions","resetDialogInputs","toolbarDidClickButton","actionName","getDialog","toggleDialog","toolbarDidInvokeAction","toolbarDidToggleAttribute","refreshAttributeButtons","dialogElement","dialog","hideDialog","updateActions","refreshActionButtons","eachActionButton","disabled","updateAttributes","eachAttributeButton","dialogIsVisible","applyKeyboardCommand","keyString","button","buttonKeys","dialogName","showDialog","toolbarWillShowDialog","disabledInput","toolbarDidShowDialog","willValidate","checkValidity","toolbarDidUpdateAttribute","toolbarDidRemoveAttribute","toolbarDidHideDialog","getDialogName","EditorController","editor","config.input","editorElement","compositionController","toolbarController","toolbarElement","notifyEditorElement","handlingInput","updateCurrentActions","pasting","pastedRange","attachmentLocationRange","loadingSnapshot","isFocused","requestedLocationRange","compositionRevisionWhenLocationRangeRequested","renderedCompositionRevision","runEditorFilters","isFocusedInvisibly","requestedRender","recordTypingUndoEntry","recordFormattingUndoEntry","locationRangeBeforeDrag","invokingElement","invokeAction","selectionFrozen","canInvokeAction","actionIsExternal","getCurrentActions","currentActions","updateInputElement","serializer","serializeToContentType","setInputElementValue","message","documentChangedSinceLastRender","notify","getUndoContext","getLocationContext","getTimeContext","config.undo","Date","getTime","ownerDocument","TrixToolbarElement","connectedCallback","config.toolbar","makeEditable","handleEventOnce","configureContentEditable","disableObjectResizing","setDefaultParagraphSeparator","queryCommandSupported","execCommand","cursorTargetStyles","TrixEditorElement","labels","label","toolbarId","inputElement","inputId","nextElementSibling","editorController","defaultValue","addAccessibilityRole","texts","contains","ensureAriaLabel","registerResetListener","registerClickListener","autofocus","disconnectedCallback","unregisterResetListener","unregisterClickListener","resetListener","resetBubbled","clickListener","clickBubbled","Trix","VERSION","version","core","models","controllers","observers","customElements","define","elements.TrixToolbarElement","elements.TrixEditorElement"],"mappings":"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"}